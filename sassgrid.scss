// Sass Grid

// Repository: https://github.com/thiamsantos/sassgrid.git
// Author: Thiago Santos
// Version: 0.1
// Licence: MIT - https://github.com/thiamsantos/sassgrid/LICENSE

// Configs
//------------------------------------------------//
$gutter-width: 1rem;
$num-cols: 12;

// Box Model
// ------------------------------------------------//
* {
  box-sizing: border-box;
}

// Prefixer
// ------------------------------------------------//
@mixin flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin flex($value) {
  -webkit-box-flex: $value;
  -webkit-flex: $value;
  -ms-flex: $value;
  flex: $value;
}

@mixin flex-flow($value) {
  -webkit-flex-flow: $value;
  -ms-flex-flow: $value;
  flex-flow: $value;
}

// Row
//------------------------------------------------//
%row {
  @include flexbox;
  @include flex(0 1 auto);
  @include flex-flow(row wrap);
  margin: 0 - $gutter-width / 2 $gutter-width - $gutter-width / 2;
}

// Gutter
//------------------------------------------------//
%gutter {
  padding: 0 $gutter-width / 2;
}

// Columns
//------------------------------------------------//

// mixin
@mixin col($col: flex) {
  @if $col == flex {
    @include flex(1);
  }
  @else if unit($col) == "" and $col >= 1 and $col <= $num-cols {
    $perc: 100% / ($num-cols / $col);
    @include flex(0 0 $perc);
  }
  @else {
    @include flex(1 0 $col);
  }
  @extend %gutter;
}

// extends the mixin :)
%col-flex {
  @include col(flex);
}

%col-1 {
  @include col(1);
}

%col-2 {
  @include col(2);
}

%col-3 {
  @include col(3);
}

%col-4 {
  @include col(4);
}

%col-5 {
  @include col(5);
}

%col-6 {
  @include col(6);
}

%col-7 {
  @include col(7);
}

%col-8 {
  @include col(8);
}

%col-9 {
  @include col(9);
}

%col-10 {
  @include col(10);
}

%col-11 {
  @include col(11);
}

%col-12 {
  @include col(12);
}

// // for media queries
// @mixin mq-col($number-of-cols) {
//   width: ($number-of-cols * $column_width) + ((($number-of-cols - 1) * 2) * $margin);
// }

// // Offset
// //------------------------------------------------//

// // mixin
// @mixin mq-offset($number-of-offset) {
//   margin-left: ($number-of-offset * $column_width) + ((($number-of-offset - 1) * 2) * $margin) + (3 * $margin);
// }

// // extends the mixin :)
// %offset-0 {
//   @include mq-offset(0);
// }

// %offset-1 {
//   @include mq-offset(1);
// }

// %offset-2 {
//   @include mq-offset(2);
// }

// %offset-3 {
//   @include mq-offset(3);
// }

// %offset-4 {
//   @include mq-offset(4);
// }

// %offset-5 {
//   @include mq-offset(5);
// }

// %offset-6 {
//   @include mq-offset(6);
// }

// %offset-7 {
//   @include mq-offset(7);
// }

// %offset-8 {
//   @include mq-offset(8);
// }

// %offset-9 {
//   @include mq-offset(9);
// }

// %offset-10 {
//   @include mq-offset(10);
// }

// %offset-11 {
//   @include mq-offset(11);
// }

// // Flex Container
// //------------------------------------------------//

// // mixin
// @mixin mq-justify($content-value) {

//   @if ($content-value == left) {
//     -webkit-box-pack: start;
//     -webkit-justify-content: flex-start;
//     -ms-flex-pack: start;
//     justify-content: flex-start;
//   }

//   @if ($content-value == right) {
//     -webkit-box-pack: end;
//     -webkit-justify-content: flex-end;
//     -ms-flex-pack: end;
//     justify-content: flex-end;
//   }

//   @if ($content-value == center) {
//     -webkit-box-pack: center;
//     -webkit-justify-content: center;
//     -ms-flex-pack: center;
//     justify-content: center;
//   }

//   @if ($content-value == between) {
//     -webkit-box-pack: justify;
//     -webkit-justify-content: space-between;
//     -ms-flex-pack: justify;
//     justify-content: space-between;
//   }

//   @if ($content-value == around) {
//     -webkit-justify-content: space-around;
//     -ms-flex-pack: distribute;
//     justify-content: space-around;
//   }

// }

// // extends the mixin :)
// %justify-left {
//   @include mq-justify(left);
// }

// %justify-right {
//   @include mq-justify(right);
// }

// %justify-center {
//   @include mq-justify(center);
// }

// %justify-between {
//   @include mq-justify(between);
// }

// %justify-around {
//   @include mq-justify(around);
// }

// // Flex Itens
// //------------------------------------------------//

// // mixin
// @mixin mq-vertical-align($vertical-value) {

//   @if ($vertical-value == top) {
//     -webkit-box-align: start;
//     -webkit-align-items: flex-start;
//     -ms-flex-align: start;
//     align-items: flex-start;
//     -webkit-align-content: flex-start;
//     -ms-flex-line-pack: start;
//     align-content: flex-start;
//   }

//   @if ($vertical-value == middle) {
//     -webkit-box-align: center;
//     -webkit-align-items: center;
//     -ms-flex-align: center;
//     align-items: center;
//     -webkit-align-content: center;
//     -ms-flex-line-pack: center;
//     align-content: center;
//   }

//   @if ($vertical-value == bottom) {
//     -webkit-box-align: end;
//     -webkit-align-items: flex-end;
//     -ms-flex-align: end;
//     align-items: flex-end;
//     -webkit-align-content: flex-end;
//     -ms-flex-line-pack: end;
//     align-content: flex-end;
//   }

// }

// // extends the mixin :)
// %vertical-align-top {
//   @include mq-vertical-align(top);
// }

// %vertical-align-middle {
//   @include mq-vertical-align(middle);
// }

// %vertical-align-bottom {
//   @include mq-vertical-align(bottom);
// }
